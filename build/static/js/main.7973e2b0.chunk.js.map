{"version":3,"sources":["logo.svg","RoamingNavbar.js","App.js","reportWebVitals.js","index.js"],"names":["RoamingNavbar","React","useState","scrolled","setScrolled","handleScroll","offset","window","scrollY","console","log","useEffect","addEventListener","x","push","className","join","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAAe,I,YCyDAA,G,MArDK,WAAO,IAAD,EACKC,IAAMC,UAAS,GADpB,mBACjBC,EADiB,KACRC,EADQ,KAGlBC,EAAa,WACjB,IAAMC,EAAOC,OAAOC,QACpBC,QAAQC,IAAIJ,GAEVF,EADCE,EAAU,IAWfK,qBAAU,WACRJ,OAAOK,iBAAiB,SAASP,MAInC,IAAIQ,EAAE,CAAC,UAMP,OALGV,GACDU,EAAEC,KAAK,YAKP,wBAAQC,UAAWF,EAAEG,KAAK,KAA1B,SAGI,qBAAKD,UAAU,aAAf,SACI,+BAEE,oBAAIE,GAAG,SACP,qBAAIA,GAAG,WAAP,UAEE,8FACA,sFACA,iGCwBDC,MAhEf,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKE,GAAG,YAGR,sBAAKA,GAAG,UAAR,UACA,sBAAKA,GAAG,cAAR,UACA,gEACA,0IACE,0FAGA,sBAAKF,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACE,gDACA,oKAEF,qBAAKA,UAAU,YACf,qBAAKA,UAAU,UAAUE,GAAG,iBAG9B,sBAAKF,UAAU,MAAf,UACA,sBAAKA,UAAU,OAAf,UACI,gDACA,iIAGF,qBAAKA,UAAU,YAEf,qBAAKA,UAAU,UAAUE,GAAG,iBAI9B,sBAAKF,UAAU,MAAf,UACA,sBAAKA,UAAU,OAAf,UACE,sDACA,uGAEA,qBAAKA,UAAU,YACf,qBAAKA,UAAU,UAAUE,GAAG,kBAI9B,sBAAKF,UAAU,MAAf,UACA,sBAAKA,UAAU,OAAf,UACE,qDACA,sHAEA,qBAAKA,UAAU,YAGf,qBAAKA,UAAU,UAAUE,GAAG,uBC7CvBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7973e2b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React,{useEffect} from 'react';\nimport './navbar.scss';\n\n\nconst RoamingNavbar=() => {\n  const [scrolled,setScrolled]=React.useState(false);\n\n  const handleScroll=() => {\n    const offset=window.scrollY;\n    console.log(offset);\n    if(offset > (0) ){\n      setScrolled(true);\n    }\n    else{\n      setScrolled(false);\n    }\n  }\n\n\n\n\n  useEffect(() => {\n    window.addEventListener('scroll',handleScroll)\n  })\n\n\n  let x=['navbar'];\n  if(scrolled){\n    x.push('scrolled');\n  }\n\n\n  return (\n    <header className={x.join(\" \")}>\n\n\n        <nav className=\"navigation\">\n            <ul>\n              \n              <li id=\"logo\"></li>\n              <li id=\"contacts\">\n                \n                <li> Software Engineer; andrew.suryanto@bigcloudanalytics.com.au</li>\n                <li> Administration; ni.nuryani@bigcloudanalytics.com.au</li>\n                <li> Director; hendra.suryanto@bigcloudanalytics.com.au</li>\n\n              </li>\n\n              \n\n            </ul>\n        </nav>\n\n    </header>\n  )\n};\n\nexport default RoamingNavbar;","import logo from './logo.svg';\nimport './App.scss';\nimport RoamingNavbar from './RoamingNavbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RoamingNavbar/>\n      <div id=\"heropic\">\n\n      </div>\n      <div id=\"content\">\n      <div id=\"welcometext\">\n      <p>Welcome to Big Cloud Analytics.</p>\n      <p>Here at Big Cloud Analytics we offer many services relating to data processing and predictive modelling. </p>\n        <p>Contact any one of us through email for a quote today.</p>\n      </div>\n\n        <div className=\"box\">\n          <div className=\"text\">\n            <h1>Data Cleansing</h1>\n            <p>Rectification and removal of corrupted, incorrectly formatted, duplicate, missing or otherwise incorrect data within a database.</p>\n          </div>\n          <div className=\"divider\"></div>\n          <div className=\"picture\" id=\"cleansing\"></div>\n        </div>\n\n        <div className=\"box\">\n        <div className=\"text\">\n            <h1>Data Wrangling</h1>\n            <p>Transforming or visualising data into a more appropriate and valuable format for further use.</p>\n          </div>\n        \n          <div className=\"divider\"></div>\n          \n          <div className=\"picture\" id=\"wrangling\"></div>\n\n            \n        </div>\n        <div className=\"box\">\n        <div className=\"text\">\n          <h1>Predictive Modelling</h1>\n          <p>Utilising pre-formatted data to derive actionable conclusions from.</p>\n        </div>\n          <div className=\"divider\"></div>\n          <div className=\"picture\" id=\"predictive\"></div>\n          \n            \n        </div>\n        <div className=\"box\">\n        <div className=\"text\">\n          <h1>Actionable Insights</h1>\n          <p>The collection of meaningful actions taken after analysis of a given set of data.s</p>\n          </div>\n          <div className=\"divider\"></div>\n          \n\n          <div className=\"picture\" id=\"insights\"></div>\n          \n            \n        </div>\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}